package BaseFrege.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAIOperator = createDescriptorForAIOperator();
  /*package*/ final ConceptDescriptor myConceptAIVarid = createDescriptorForAIVarid();
  /*package*/ final ConceptDescriptor myConceptAnnotation = createDescriptorForAnnotation();
  /*package*/ final ConceptDescriptor myConceptAnnotationItem = createDescriptorForAnnotationItem();
  /*package*/ final ConceptDescriptor myConceptBCContent = createDescriptorForBCContent();
  /*package*/ final ConceptDescriptor myConceptBCLine = createDescriptorForBCLine();
  /*package*/ final ConceptDescriptor myConceptBCNestedComment = createDescriptorForBCNestedComment();
  /*package*/ final ConceptDescriptor myConceptBinaryExpression = createDescriptorForBinaryExpression();
  /*package*/ final ConceptDescriptor myConceptBlockComment = createDescriptorForBlockComment();
  /*package*/ final ConceptDescriptor myConceptBooleanValue = createDescriptorForBooleanValue();
  /*package*/ final ConceptDescriptor myConceptBrackets = createDescriptorForBrackets();
  /*package*/ final ConceptDescriptor myConceptCPExprToExpr = createDescriptorForCPExprToExpr();
  /*package*/ final ConceptDescriptor myConceptCPExprToGuards = createDescriptorForCPExprToGuards();
  /*package*/ final ConceptDescriptor myConceptCase = createDescriptorForCase();
  /*package*/ final ConceptDescriptor myConceptCasePart = createDescriptorForCasePart();
  /*package*/ final ConceptDescriptor myConceptCharValue = createDescriptorForCharValue();
  /*package*/ final ConceptDescriptor myConceptClass = createDescriptorForClass();
  /*package*/ final ConceptDescriptor myConceptComment = createDescriptorForComment();
  /*package*/ final ConceptDescriptor myConceptConstrCall = createDescriptorForConstrCall();
  /*package*/ final ConceptDescriptor myConceptContext = createDescriptorForContext();
  /*package*/ final ConceptDescriptor myConceptContextPart = createDescriptorForContextPart();
  /*package*/ final ConceptDescriptor myConceptData = createDescriptorForData();
  /*package*/ final ConceptDescriptor myConceptDataDefinitionPart = createDescriptorForDataDefinitionPart();
  /*package*/ final ConceptDescriptor myConceptDefinition = createDescriptorForDefinition();
  /*package*/ final ConceptDescriptor myConceptDoubleValue = createDescriptorForDoubleValue();
  /*package*/ final ConceptDescriptor myConceptEmptyLine = createDescriptorForEmptyLine();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptExpressionPart = createDescriptorForExpressionPart();
  /*package*/ final ConceptDescriptor myConceptFCLambda = createDescriptorForFCLambda();
  /*package*/ final ConceptDescriptor myConceptFCNamed = createDescriptorForFCNamed();
  /*package*/ final ConceptDescriptor myConceptFCOperator = createDescriptorForFCOperator();
  /*package*/ final ConceptDescriptor myConceptFDAssignment = createDescriptorForFDAssignment();
  /*package*/ final ConceptDescriptor myConceptFDGuards = createDescriptorForFDGuards();
  /*package*/ final ConceptDescriptor myConceptFOCharacterOperator = createDescriptorForFOCharacterOperator();
  /*package*/ final ConceptDescriptor myConceptFOSymbolicOperator = createDescriptorForFOSymbolicOperator();
  /*package*/ final ConceptDescriptor myConceptFalseValue = createDescriptorForFalseValue();
  /*package*/ final ConceptDescriptor myConceptFixity = createDescriptorForFixity();
  /*package*/ final ConceptDescriptor myConceptFixityOperator = createDescriptorForFixityOperator();
  /*package*/ final ConceptDescriptor myConceptFullType = createDescriptorForFullType();
  /*package*/ final ConceptDescriptor myConceptFunCall = createDescriptorForFunCall();
  /*package*/ final ConceptDescriptor myConceptFunDef = createDescriptorForFunDef();
  /*package*/ final ConceptDescriptor myConceptFunctionDefinitions = createDescriptorForFunctionDefinitions();
  /*package*/ final ConceptDescriptor myConceptGuard = createDescriptorForGuard();
  /*package*/ final ConceptDescriptor myConceptIICMConid = createDescriptorForIICMConid();
  /*package*/ final ConceptDescriptor myConceptIICMOperator = createDescriptorForIICMOperator();
  /*package*/ final ConceptDescriptor myConceptIICMVarid = createDescriptorForIICMVarid();
  /*package*/ final ConceptDescriptor myConceptIICMember = createDescriptorForIICMember();
  /*package*/ final ConceptDescriptor myConceptIfThenElse = createDescriptorForIfThenElse();
  /*package*/ final ConceptDescriptor myConceptImport = createDescriptorForImport();
  /*package*/ final ConceptDescriptor myConceptImportAs = createDescriptorForImportAs();
  /*package*/ final ConceptDescriptor myConceptImportHiding = createDescriptorForImportHiding();
  /*package*/ final ConceptDescriptor myConceptImportItem = createDescriptorForImportItem();
  /*package*/ final ConceptDescriptor myConceptImportItemClass = createDescriptorForImportItemClass();
  /*package*/ final ConceptDescriptor myConceptImportItemOperator = createDescriptorForImportItemOperator();
  /*package*/ final ConceptDescriptor myConceptImportItemQconid = createDescriptorForImportItemQconid();
  /*package*/ final ConceptDescriptor myConceptImportItemQvarid = createDescriptorForImportItemQvarid();
  /*package*/ final ConceptDescriptor myConceptImportList = createDescriptorForImportList();
  /*package*/ final ConceptDescriptor myConceptImportedResource = createDescriptorForImportedResource();
  /*package*/ final ConceptDescriptor myConceptInfix = createDescriptorForInfix();
  /*package*/ final ConceptDescriptor myConceptInfixAbstract = createDescriptorForInfixAbstract();
  /*package*/ final ConceptDescriptor myConceptInfixl = createDescriptorForInfixl();
  /*package*/ final ConceptDescriptor myConceptInfixr = createDescriptorForInfixr();
  /*package*/ final ConceptDescriptor myConceptInstance = createDescriptorForInstance();
  /*package*/ final ConceptDescriptor myConceptIntegerValue = createDescriptorForIntegerValue();
  /*package*/ final ConceptDescriptor myConceptLCQArrowAssignment = createDescriptorForLCQArrowAssignment();
  /*package*/ final ConceptDescriptor myConceptLCQGuard = createDescriptorForLCQGuard();
  /*package*/ final ConceptDescriptor myConceptLCQLet = createDescriptorForLCQLet();
  /*package*/ final ConceptDescriptor myConceptLCQualifier = createDescriptorForLCQualifier();
  /*package*/ final ConceptDescriptor myConceptLDAnnotation = createDescriptorForLDAnnotation();
  /*package*/ final ConceptDescriptor myConceptLDFunDef = createDescriptorForLDFunDef();
  /*package*/ final ConceptDescriptor myConceptLPExpression = createDescriptorForLPExpression();
  /*package*/ final ConceptDescriptor myConceptLPLambda = createDescriptorForLPLambda();
  /*package*/ final ConceptDescriptor myConceptLambda = createDescriptorForLambda();
  /*package*/ final ConceptDescriptor myConceptLambdaPart = createDescriptorForLambdaPart();
  /*package*/ final ConceptDescriptor myConceptLet = createDescriptorForLet();
  /*package*/ final ConceptDescriptor myConceptLetDefinition = createDescriptorForLetDefinition();
  /*package*/ final ConceptDescriptor myConceptLetDefinitions = createDescriptorForLetDefinitions();
  /*package*/ final ConceptDescriptor myConceptLineComment = createDescriptorForLineComment();
  /*package*/ final ConceptDescriptor myConceptList = createDescriptorForList();
  /*package*/ final ConceptDescriptor myConceptListComprehension = createDescriptorForListComprehension();
  /*package*/ final ConceptDescriptor myConceptListEnumeration = createDescriptorForListEnumeration();
  /*package*/ final ConceptDescriptor myConceptListRange = createDescriptorForListRange();
  /*package*/ final ConceptDescriptor myConceptLiteral = createDescriptorForLiteral();
  /*package*/ final ConceptDescriptor myConceptMPModule = createDescriptorForMPModule();
  /*package*/ final ConceptDescriptor myConceptMPSCONID = createDescriptorForMPSCONID();
  /*package*/ final ConceptDescriptor myConceptMPSVARID = createDescriptorForMPSVARID();
  /*package*/ final ConceptDescriptor myConceptMPSimple = createDescriptorForMPSimple();
  /*package*/ final ConceptDescriptor myConceptMain = createDescriptorForMain();
  /*package*/ final ConceptDescriptor myConceptModule = createDescriptorForModule();
  /*package*/ final ConceptDescriptor myConceptModulePart = createDescriptorForModulePart();
  /*package*/ final ConceptDescriptor myConceptNodeCONID = createDescriptorForNodeCONID();
  /*package*/ final ConceptDescriptor myConceptNodeOperator = createDescriptorForNodeOperator();
  /*package*/ final ConceptDescriptor myConceptNodeVARID = createDescriptorForNodeVARID();
  /*package*/ final ConceptDescriptor myConceptPBracket = createDescriptorForPBracket();
  /*package*/ final ConceptDescriptor myConceptPConstructor = createDescriptorForPConstructor();
  /*package*/ final ConceptDescriptor myConceptPLEBPatternArgument = createDescriptorForPLEBPatternArgument();
  /*package*/ final ConceptDescriptor myConceptPLEBPlaceholder = createDescriptorForPLEBPlaceholder();
  /*package*/ final ConceptDescriptor myConceptPList = createDescriptorForPList();
  /*package*/ final ConceptDescriptor myConceptPListBracket = createDescriptorForPListBracket();
  /*package*/ final ConceptDescriptor myConceptPListColon = createDescriptorForPListColon();
  /*package*/ final ConceptDescriptor myConceptPListVar = createDescriptorForPListVar();
  /*package*/ final ConceptDescriptor myConceptPLiteral = createDescriptorForPLiteral();
  /*package*/ final ConceptDescriptor myConceptPTuple = createDescriptorForPTuple();
  /*package*/ final ConceptDescriptor myConceptPVarName = createDescriptorForPVarName();
  /*package*/ final ConceptDescriptor myConceptPVarWildcard = createDescriptorForPVarWildcard();
  /*package*/ final ConceptDescriptor myConceptPVariable = createDescriptorForPVariable();
  /*package*/ final ConceptDescriptor myConceptPattern = createDescriptorForPattern();
  /*package*/ final ConceptDescriptor myConceptPatternArgument = createDescriptorForPatternArgument();
  /*package*/ final ConceptDescriptor myConceptPatternArgumentWrapper = createDescriptorForPatternArgumentWrapper();
  /*package*/ final ConceptDescriptor myConceptPatternFunction = createDescriptorForPatternFunction();
  /*package*/ final ConceptDescriptor myConceptPatternOperator = createDescriptorForPatternOperator();
  /*package*/ final ConceptDescriptor myConceptPatternWrapper = createDescriptorForPatternWrapper();
  /*package*/ final ConceptDescriptor myConceptQCONID = createDescriptorForQCONID();
  /*package*/ final ConceptDescriptor myConceptQVARID = createDescriptorForQVARID();
  /*package*/ final ConceptDescriptor myConceptResource = createDescriptorForResource();
  /*package*/ final ConceptDescriptor myConceptSimpletype = createDescriptorForSimpletype();
  /*package*/ final ConceptDescriptor myConceptSkeleton = createDescriptorForSkeleton();
  /*package*/ final ConceptDescriptor myConceptStringValue = createDescriptorForStringValue();
  /*package*/ final ConceptDescriptor myConceptTerm = createDescriptorForTerm();
  /*package*/ final ConceptDescriptor myConceptTopExpression = createDescriptorForTopExpression();
  /*package*/ final ConceptDescriptor myConceptTrueValue = createDescriptorForTrueValue();
  /*package*/ final ConceptDescriptor myConceptTuple = createDescriptorForTuple();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptTypeBrackets = createDescriptorForTypeBrackets();
  /*package*/ final ConceptDescriptor myConceptTypeData = createDescriptorForTypeData();
  /*package*/ final ConceptDescriptor myConceptTypeFunction = createDescriptorForTypeFunction();
  /*package*/ final ConceptDescriptor myConceptTypeList = createDescriptorForTypeList();
  /*package*/ final ConceptDescriptor myConceptTypeTuple = createDescriptorForTypeTuple();
  /*package*/ final ConceptDescriptor myConceptTypeVariable = createDescriptorForTypeVariable();
  /*package*/ final ConceptDescriptor myConceptUnaryOPExpression = createDescriptorForUnaryOPExpression();
  /*package*/ final ConceptDescriptor myConceptUnderscore = createDescriptorForUnderscore();
  /*package*/ final ConceptDescriptor myConceptWherePart = createDescriptorForWherePart();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAIOperator, myConceptAIVarid, myConceptAnnotation, myConceptAnnotationItem, myConceptBCContent, myConceptBCLine, myConceptBCNestedComment, myConceptBinaryExpression, myConceptBlockComment, myConceptBooleanValue, myConceptBrackets, myConceptCPExprToExpr, myConceptCPExprToGuards, myConceptCase, myConceptCasePart, myConceptCharValue, myConceptClass, myConceptComment, myConceptConstrCall, myConceptContext, myConceptContextPart, myConceptData, myConceptDataDefinitionPart, myConceptDefinition, myConceptDoubleValue, myConceptEmptyLine, myConceptExpression, myConceptExpressionPart, myConceptFCLambda, myConceptFCNamed, myConceptFCOperator, myConceptFDAssignment, myConceptFDGuards, myConceptFOCharacterOperator, myConceptFOSymbolicOperator, myConceptFalseValue, myConceptFixity, myConceptFixityOperator, myConceptFullType, myConceptFunCall, myConceptFunDef, myConceptFunctionDefinitions, myConceptGuard, myConceptIICMConid, myConceptIICMOperator, myConceptIICMVarid, myConceptIICMember, myConceptIfThenElse, myConceptImport, myConceptImportAs, myConceptImportHiding, myConceptImportItem, myConceptImportItemClass, myConceptImportItemOperator, myConceptImportItemQconid, myConceptImportItemQvarid, myConceptImportList, myConceptImportedResource, myConceptInfix, myConceptInfixAbstract, myConceptInfixl, myConceptInfixr, myConceptInstance, myConceptIntegerValue, myConceptLCQArrowAssignment, myConceptLCQGuard, myConceptLCQLet, myConceptLCQualifier, myConceptLDAnnotation, myConceptLDFunDef, myConceptLPExpression, myConceptLPLambda, myConceptLambda, myConceptLambdaPart, myConceptLet, myConceptLetDefinition, myConceptLetDefinitions, myConceptLineComment, myConceptList, myConceptListComprehension, myConceptListEnumeration, myConceptListRange, myConceptLiteral, myConceptMPModule, myConceptMPSCONID, myConceptMPSVARID, myConceptMPSimple, myConceptMain, myConceptModule, myConceptModulePart, myConceptNodeCONID, myConceptNodeOperator, myConceptNodeVARID, myConceptPBracket, myConceptPConstructor, myConceptPLEBPatternArgument, myConceptPLEBPlaceholder, myConceptPList, myConceptPListBracket, myConceptPListColon, myConceptPListVar, myConceptPLiteral, myConceptPTuple, myConceptPVarName, myConceptPVarWildcard, myConceptPVariable, myConceptPattern, myConceptPatternArgument, myConceptPatternArgumentWrapper, myConceptPatternFunction, myConceptPatternOperator, myConceptPatternWrapper, myConceptQCONID, myConceptQVARID, myConceptResource, myConceptSimpletype, myConceptSkeleton, myConceptStringValue, myConceptTerm, myConceptTopExpression, myConceptTrueValue, myConceptTuple, myConceptType, myConceptTypeBrackets, myConceptTypeData, myConceptTypeFunction, myConceptTypeList, myConceptTypeTuple, myConceptTypeVariable, myConceptUnaryOPExpression, myConceptUnderscore, myConceptWherePart);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.AIOperator:
        return myConceptAIOperator;
      case LanguageConceptSwitch.AIVarid:
        return myConceptAIVarid;
      case LanguageConceptSwitch.Annotation:
        return myConceptAnnotation;
      case LanguageConceptSwitch.AnnotationItem:
        return myConceptAnnotationItem;
      case LanguageConceptSwitch.BCContent:
        return myConceptBCContent;
      case LanguageConceptSwitch.BCLine:
        return myConceptBCLine;
      case LanguageConceptSwitch.BCNestedComment:
        return myConceptBCNestedComment;
      case LanguageConceptSwitch.BinaryExpression:
        return myConceptBinaryExpression;
      case LanguageConceptSwitch.BlockComment:
        return myConceptBlockComment;
      case LanguageConceptSwitch.BooleanValue:
        return myConceptBooleanValue;
      case LanguageConceptSwitch.Brackets:
        return myConceptBrackets;
      case LanguageConceptSwitch.CPExprToExpr:
        return myConceptCPExprToExpr;
      case LanguageConceptSwitch.CPExprToGuards:
        return myConceptCPExprToGuards;
      case LanguageConceptSwitch.Case:
        return myConceptCase;
      case LanguageConceptSwitch.CasePart:
        return myConceptCasePart;
      case LanguageConceptSwitch.CharValue:
        return myConceptCharValue;
      case LanguageConceptSwitch.Class:
        return myConceptClass;
      case LanguageConceptSwitch.Comment:
        return myConceptComment;
      case LanguageConceptSwitch.ConstrCall:
        return myConceptConstrCall;
      case LanguageConceptSwitch.Context:
        return myConceptContext;
      case LanguageConceptSwitch.ContextPart:
        return myConceptContextPart;
      case LanguageConceptSwitch.Data:
        return myConceptData;
      case LanguageConceptSwitch.DataDefinitionPart:
        return myConceptDataDefinitionPart;
      case LanguageConceptSwitch.Definition:
        return myConceptDefinition;
      case LanguageConceptSwitch.DoubleValue:
        return myConceptDoubleValue;
      case LanguageConceptSwitch.EmptyLine:
        return myConceptEmptyLine;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.ExpressionPart:
        return myConceptExpressionPart;
      case LanguageConceptSwitch.FCLambda:
        return myConceptFCLambda;
      case LanguageConceptSwitch.FCNamed:
        return myConceptFCNamed;
      case LanguageConceptSwitch.FCOperator:
        return myConceptFCOperator;
      case LanguageConceptSwitch.FDAssignment:
        return myConceptFDAssignment;
      case LanguageConceptSwitch.FDGuards:
        return myConceptFDGuards;
      case LanguageConceptSwitch.FOCharacterOperator:
        return myConceptFOCharacterOperator;
      case LanguageConceptSwitch.FOSymbolicOperator:
        return myConceptFOSymbolicOperator;
      case LanguageConceptSwitch.FalseValue:
        return myConceptFalseValue;
      case LanguageConceptSwitch.Fixity:
        return myConceptFixity;
      case LanguageConceptSwitch.FixityOperator:
        return myConceptFixityOperator;
      case LanguageConceptSwitch.FullType:
        return myConceptFullType;
      case LanguageConceptSwitch.FunCall:
        return myConceptFunCall;
      case LanguageConceptSwitch.FunDef:
        return myConceptFunDef;
      case LanguageConceptSwitch.FunctionDefinitions:
        return myConceptFunctionDefinitions;
      case LanguageConceptSwitch.Guard:
        return myConceptGuard;
      case LanguageConceptSwitch.IICMConid:
        return myConceptIICMConid;
      case LanguageConceptSwitch.IICMOperator:
        return myConceptIICMOperator;
      case LanguageConceptSwitch.IICMVarid:
        return myConceptIICMVarid;
      case LanguageConceptSwitch.IICMember:
        return myConceptIICMember;
      case LanguageConceptSwitch.IfThenElse:
        return myConceptIfThenElse;
      case LanguageConceptSwitch.Import:
        return myConceptImport;
      case LanguageConceptSwitch.ImportAs:
        return myConceptImportAs;
      case LanguageConceptSwitch.ImportHiding:
        return myConceptImportHiding;
      case LanguageConceptSwitch.ImportItem:
        return myConceptImportItem;
      case LanguageConceptSwitch.ImportItemClass:
        return myConceptImportItemClass;
      case LanguageConceptSwitch.ImportItemOperator:
        return myConceptImportItemOperator;
      case LanguageConceptSwitch.ImportItemQconid:
        return myConceptImportItemQconid;
      case LanguageConceptSwitch.ImportItemQvarid:
        return myConceptImportItemQvarid;
      case LanguageConceptSwitch.ImportList:
        return myConceptImportList;
      case LanguageConceptSwitch.ImportedResource:
        return myConceptImportedResource;
      case LanguageConceptSwitch.Infix:
        return myConceptInfix;
      case LanguageConceptSwitch.InfixAbstract:
        return myConceptInfixAbstract;
      case LanguageConceptSwitch.Infixl:
        return myConceptInfixl;
      case LanguageConceptSwitch.Infixr:
        return myConceptInfixr;
      case LanguageConceptSwitch.Instance:
        return myConceptInstance;
      case LanguageConceptSwitch.IntegerValue:
        return myConceptIntegerValue;
      case LanguageConceptSwitch.LCQArrowAssignment:
        return myConceptLCQArrowAssignment;
      case LanguageConceptSwitch.LCQGuard:
        return myConceptLCQGuard;
      case LanguageConceptSwitch.LCQLet:
        return myConceptLCQLet;
      case LanguageConceptSwitch.LCQualifier:
        return myConceptLCQualifier;
      case LanguageConceptSwitch.LDAnnotation:
        return myConceptLDAnnotation;
      case LanguageConceptSwitch.LDFunDef:
        return myConceptLDFunDef;
      case LanguageConceptSwitch.LPExpression:
        return myConceptLPExpression;
      case LanguageConceptSwitch.LPLambda:
        return myConceptLPLambda;
      case LanguageConceptSwitch.Lambda:
        return myConceptLambda;
      case LanguageConceptSwitch.LambdaPart:
        return myConceptLambdaPart;
      case LanguageConceptSwitch.Let:
        return myConceptLet;
      case LanguageConceptSwitch.LetDefinition:
        return myConceptLetDefinition;
      case LanguageConceptSwitch.LetDefinitions:
        return myConceptLetDefinitions;
      case LanguageConceptSwitch.LineComment:
        return myConceptLineComment;
      case LanguageConceptSwitch.List:
        return myConceptList;
      case LanguageConceptSwitch.ListComprehension:
        return myConceptListComprehension;
      case LanguageConceptSwitch.ListEnumeration:
        return myConceptListEnumeration;
      case LanguageConceptSwitch.ListRange:
        return myConceptListRange;
      case LanguageConceptSwitch.Literal:
        return myConceptLiteral;
      case LanguageConceptSwitch.MPModule:
        return myConceptMPModule;
      case LanguageConceptSwitch.MPSCONID:
        return myConceptMPSCONID;
      case LanguageConceptSwitch.MPSVARID:
        return myConceptMPSVARID;
      case LanguageConceptSwitch.MPSimple:
        return myConceptMPSimple;
      case LanguageConceptSwitch.Main:
        return myConceptMain;
      case LanguageConceptSwitch.Module:
        return myConceptModule;
      case LanguageConceptSwitch.ModulePart:
        return myConceptModulePart;
      case LanguageConceptSwitch.NodeCONID:
        return myConceptNodeCONID;
      case LanguageConceptSwitch.NodeOperator:
        return myConceptNodeOperator;
      case LanguageConceptSwitch.NodeVARID:
        return myConceptNodeVARID;
      case LanguageConceptSwitch.PBracket:
        return myConceptPBracket;
      case LanguageConceptSwitch.PConstructor:
        return myConceptPConstructor;
      case LanguageConceptSwitch.PLEBPatternArgument:
        return myConceptPLEBPatternArgument;
      case LanguageConceptSwitch.PLEBPlaceholder:
        return myConceptPLEBPlaceholder;
      case LanguageConceptSwitch.PList:
        return myConceptPList;
      case LanguageConceptSwitch.PListBracket:
        return myConceptPListBracket;
      case LanguageConceptSwitch.PListColon:
        return myConceptPListColon;
      case LanguageConceptSwitch.PListVar:
        return myConceptPListVar;
      case LanguageConceptSwitch.PLiteral:
        return myConceptPLiteral;
      case LanguageConceptSwitch.PTuple:
        return myConceptPTuple;
      case LanguageConceptSwitch.PVarName:
        return myConceptPVarName;
      case LanguageConceptSwitch.PVarWildcard:
        return myConceptPVarWildcard;
      case LanguageConceptSwitch.PVariable:
        return myConceptPVariable;
      case LanguageConceptSwitch.Pattern:
        return myConceptPattern;
      case LanguageConceptSwitch.PatternArgument:
        return myConceptPatternArgument;
      case LanguageConceptSwitch.PatternArgumentWrapper:
        return myConceptPatternArgumentWrapper;
      case LanguageConceptSwitch.PatternFunction:
        return myConceptPatternFunction;
      case LanguageConceptSwitch.PatternOperator:
        return myConceptPatternOperator;
      case LanguageConceptSwitch.PatternWrapper:
        return myConceptPatternWrapper;
      case LanguageConceptSwitch.QCONID:
        return myConceptQCONID;
      case LanguageConceptSwitch.QVARID:
        return myConceptQVARID;
      case LanguageConceptSwitch.Resource:
        return myConceptResource;
      case LanguageConceptSwitch.Simpletype:
        return myConceptSimpletype;
      case LanguageConceptSwitch.Skeleton:
        return myConceptSkeleton;
      case LanguageConceptSwitch.StringValue:
        return myConceptStringValue;
      case LanguageConceptSwitch.Term:
        return myConceptTerm;
      case LanguageConceptSwitch.TopExpression:
        return myConceptTopExpression;
      case LanguageConceptSwitch.TrueValue:
        return myConceptTrueValue;
      case LanguageConceptSwitch.Tuple:
        return myConceptTuple;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.TypeBrackets:
        return myConceptTypeBrackets;
      case LanguageConceptSwitch.TypeData:
        return myConceptTypeData;
      case LanguageConceptSwitch.TypeFunction:
        return myConceptTypeFunction;
      case LanguageConceptSwitch.TypeList:
        return myConceptTypeList;
      case LanguageConceptSwitch.TypeTuple:
        return myConceptTypeTuple;
      case LanguageConceptSwitch.TypeVariable:
        return myConceptTypeVariable;
      case LanguageConceptSwitch.UnaryOPExpression:
        return myConceptUnaryOPExpression;
      case LanguageConceptSwitch.Underscore:
        return myConceptUnderscore;
      case LanguageConceptSwitch.WherePart:
        return myConceptWherePart;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForAIOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "AIOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3894ecaL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.AnnotationItem", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3894eb9L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812461258");
    b.aggregate("value", 0x10e9ea0b6bee3b21L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633abcd8L).optional(false).ordered(true).multiple(false).origin("1218762508956744481").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAIVarid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "AIVarid", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3894ebaL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.AnnotationItem", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3894eb9L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812461242");
    b.aggregate("value", 0x3f5c5828a3894ebbL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e2L).optional(false).ordered(true).multiple(false).origin("4565621053812461243").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Annotation", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8c0L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786624");
    b.aggregate("items", 0x6e1bdf202e6e755cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3894eb9L).optional(false).ordered(true).multiple(true).origin("7934180497854199132").done();
    b.aggregate("type", 0x3f5c5828a3894e4fL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3893019L).optional(false).ordered(true).multiple(false).origin("4565621053812461135").done();
    b.alias("::");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnnotationItem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "AnnotationItem", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3894eb9L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812461241");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBCContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "BCContent", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x100cc1cc53ffb6dcL);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/1156512287654131420");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBCLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "BCLine", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d655e2aL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.BCContent", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x100cc1cc53ffb6dcL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746050090");
    b.prop("text", 0x76d2ad9a0d655e2bL, "8562096718746050091");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBCNestedComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "BCNestedComment", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x100cc1cc53ffb707L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.BCContent", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x100cc1cc53ffb6dcL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/1156512287654131463");
    b.aggregate("comment", 0x100cc1cc53ffb723L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d655e0fL).optional(false).ordered(true).multiple(false).origin("1156512287654131491").done();
    b.alias("{-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "BinaryExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b37071L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.ExpressionPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a350aL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988828273");
    b.aggregate("left", 0x5feee6d035b3dde8L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a350aL).optional(false).ordered(true).multiple(false).origin("6912716259988856296").done();
    b.aggregate("right", 0x5feee6d035b3ddeaL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a350aL).optional(false).ordered(true).multiple(false).origin("6912716259988856298").done();
    b.aggregate("operator", 0x66fa4fc6582a350bL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633abcd8L).optional(false).ordered(true).multiple(false).origin("7420331049347593483").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlockComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "BlockComment", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d655e0fL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Comment", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d655de6L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746050063");
    b.aggregate("parts", 0x76d2ad9a0d655e3aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x100cc1cc53ffb6dcL).optional(true).ordered(true).multiple(true).origin("8562096718746050106").done();
    b.alias("{-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "BooleanValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d90cL);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.Literal", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f322057L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786700");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBrackets() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Brackets", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fdc87L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Term", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8edL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6531617606750690439");
    b.aggregate("expression", 0x5aa4f79b7b0fdc88L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6531617606750690440").done();
    b.alias("(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCPExprToExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "CPExprToExpr", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3f8a8L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.CasePart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3f879L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988863144");
    b.aggregate("pattern", 0x5feee6d035b3f8a9L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(false).origin("6912716259988863145").done();
    b.aggregate("expression", 0x5feee6d035b3f8abL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6912716259988863147").done();
    b.aggregate("where", 0x3575c62ea7ed36dbL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d993L).optional(true).ordered(true).multiple(false).origin("3852202959973463771").done();
    b.alias("->");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCPExprToGuards() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "CPExprToGuards", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3f8d2L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.CasePart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3f879L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988863186");
    b.aggregate("pattern", 0x5feee6d035b3f8d3L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(false).origin("6912716259988863187").done();
    b.aggregate("guards", 0x5feee6d035b3f8d5L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d926L).optional(false).ordered(true).multiple(true).origin("6912716259988863189").done();
    b.aggregate("where", 0x3575c62ea7ed36eaL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d993L).optional(true).ordered(true).multiple(false).origin("3852202959973463786").done();
    b.alias("|");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Case", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d93bL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.TopExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3ddeeL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786747");
    b.aggregate("expression", 0x5feee6d035b3f871L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6912716259988863089").done();
    b.aggregate("cases", 0x5feee6d035b3f87aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3f879L).optional(false).ordered(true).multiple(true).origin("6912716259988863098").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCasePart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "CasePart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3f879L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988863097");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCharValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "CharValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d908L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Literal", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f322057L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786696");
    b.prop("value", 0x6b074f517ae20089L, "7712220098267840649");
    b.alias("'");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Class", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d905L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786693");
    b.prop("f", 0x10e9ea0b6bffed06L, "1218762508957904134");
    b.aggregate("name", 0x1b099fc7c901af16L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985a6L).optional(false).ordered(true).multiple(false).origin("1948263994234089238").done();
    b.aggregate("typeVariable", 0x1b099fc7c901af1cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f4L).optional(false).ordered(true).multiple(false).origin("1948263994234089244").done();
    b.aggregate("context", 0x1b099fc7c901af7aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1b099fc7c901af79L).optional(true).ordered(true).multiple(false).origin("1948263994234089338").done();
    b.aggregate("whereParts", 0x2854fa195e09d67bL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede0L).optional(false).ordered(true).multiple(false).origin("2906222646419641979").done();
    b.alias("class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Comment", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d655de6L);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746050022");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstrCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ConstrCall", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x53fc7efdedebfe7dL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.TopExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3ddeeL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6051851628362595965");
    b.aggregate("name", 0x53fc7efdedecaaadL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985a6L).optional(false).ordered(true).multiple(false).origin("6051851628362640045").done();
    b.aggregate("arguments", 0x53fc7efdedecaaafL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(true).ordered(true).multiple(true).origin("6051851628362640047").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContext() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Context", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1b099fc7c901af79L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/1948263994234089337");
    b.aggregate("parts", 0x1b099fc7c901afc8L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1b099fc7c901afa7L).optional(false).ordered(true).multiple(true).origin("1948263994234089416").done();
    b.alias("=>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContextPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ContextPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1b099fc7c901afa7L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/1948263994234089383");
    b.aggregate("class", 0x1b099fc7c901afa8L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985a6L).optional(false).ordered(true).multiple(false).origin("1948263994234089384").done();
    b.aggregate("typeVariable", 0x1b099fc7c901afaaL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f4L).optional(false).ordered(true).multiple(false).origin("1948263994234089386").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Data", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d904L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786692");
    b.aggregate("name", 0x6e1bdf202e6e7578L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("7934180497854199160").done();
    b.aggregate("typeVariables", 0x608e2b4f233201e3L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f4L).optional(true).ordered(true).multiple(true).origin("6957546093226885603").done();
    b.aggregate("parts", 0x1b099fc7c901aefbL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x608e2b4f233247d0L).optional(false).ordered(true).multiple(true).origin("1948263994234089211").done();
    b.alias("data");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataDefinitionPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "DataDefinitionPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x608e2b4f233247d0L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6957546093226903504");
    b.aggregate("name", 0x608e2b4f233247d1L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("6957546093226903505").done();
    b.aggregate("types", 0x608e2b4f233247ebL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L).optional(true).ordered(true).multiple(true).origin("6957546093226903531").done();
    b.alias("|");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786591");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDoubleValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "DoubleValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d90bL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Literal", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f322057L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786699");
    b.prop("value", 0x6b074f517ae20098L, "7712220098267840664");
    b.alias("double");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "EmptyLine", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x100cc1cc541493b9L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/1156512287655498681");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Expression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786647");
    b.aggregate("expression", 0x5feee6d035b3708bL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a350aL).optional(false).ordered(true).multiple(false).origin("6912716259988828299").done();
    b.aggregate("type", 0x5feee6d035b37090L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3893019L).optional(true).ordered(true).multiple(false).origin("6912716259988828304").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpressionPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ExpressionPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a350aL);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/7420331049347593482");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFCLambda() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FCLambda", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x53fc7efdedec9ceeL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.FunCall", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x33835739b584ce6dL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6051851628362636526");
    b.aggregate("lambda", 0x53fc7efdedec9cf1L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d907L).optional(false).ordered(true).multiple(false).origin("6051851628362636529").done();
    b.aggregate("arguments", 0x53fc7efdedec9cf5L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(true).ordered(true).multiple(true).origin("6051851628362636533").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFCNamed() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FCNamed", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x53fc7efdedec445dL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.FunCall", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x33835739b584ce6dL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6051851628362613853");
    b.aggregate("name", 0x53fc7efdedec445eL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049a298fL).optional(false).ordered(true).multiple(false).origin("6051851628362613854").done();
    b.aggregate("arguments", 0x53fc7efdedec4460L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(true).ordered(true).multiple(true).origin("6051851628362613856").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFCOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FCOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x53fc7efdedec89a3L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.FunCall", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x33835739b584ce6dL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6051851628362631587");
    b.aggregate("operator", 0x53fc7efdedec89a4L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633abcd8L).optional(false).ordered(true).multiple(false).origin("6051851628362631588").done();
    b.aggregate("arguments", 0x53fc7efdedec89a6L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(true).ordered(true).multiple(true).origin("6051851628362631590").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFDAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FDAssignment", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3dceaL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.FunDef", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8c1L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988856042");
    b.aggregate("pattern", 0x5feee6d035b3dd05L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1db1c5d8465bf8faL).optional(false).ordered(true).multiple(false).origin("6912716259988856069").done();
    b.aggregate("equalsTo", 0x5feee6d035b3dd07L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6912716259988856071").done();
    b.aggregate("where", 0x5aa4f79b7b0fdeb0L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d993L).optional(true).ordered(true).multiple(false).origin("6531617606750690992").done();
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFDGuards() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FDGuards", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3dcebL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.FunDef", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8c1L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988856043");
    b.aggregate("pattern", 0x5feee6d035b3dd2fL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1db1c5d8465bf8faL).optional(false).ordered(true).multiple(false).origin("6912716259988856111").done();
    b.aggregate("guards", 0x5feee6d035b3dd31L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d926L).optional(false).ordered(true).multiple(true).origin("6912716259988856113").done();
    b.aggregate("where", 0x5aa4f79b7b10486fL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d993L).optional(true).ordered(true).multiple(false).origin("6531617606750718063").done();
    b.alias("|");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFOCharacterOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FOCharacterOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0xa037b0df0ff68dfL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.FixityOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0xa037b0df0fef9ceL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/721555665117472991");
    b.prop("value", 0xa037b0df0ff68e0L, "721555665117472992");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFOSymbolicOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FOSymbolicOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0xa037b0df0fef9cfL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.FixityOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0xa037b0df0fef9ceL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/721555665117444559");
    b.prop("value", 0xa037b0df0fef9d0L, "721555665117444560");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFalseValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FalseValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f20387fL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.BooleanValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d90cL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/1839659371720620159");
    b.alias("false");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFixity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Fixity", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8c2L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786626");
    b.prop("priority", 0x5feee6d035b32d92L, "6912716259988811154");
    b.aggregate("infix", 0x5feee6d035b32dceL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b32dcdL).optional(false).ordered(true).multiple(false).origin("6912716259988811214").done();
    b.aggregate("operator", 0x3f5c5828a3894e4cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0xa037b0df0fef9ceL).optional(false).ordered(true).multiple(false).origin("4565621053812461132").done();
    b.alias("fixity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFixityOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FixityOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0xa037b0df0fef9ceL);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/721555665117444558");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFullType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FullType", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3893019L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453401");
    b.aggregate("context", 0x3f5c5828a38930fbL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1b099fc7c901af79L).optional(true).ordered(true).multiple(false).origin("4565621053812453627").done();
    b.aggregate("type", 0x3f5c5828a38930c4L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65ea2dL).optional(false).ordered(true).multiple(false).origin("4565621053812453572").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FunCall", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x33835739b584ce6dL);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.TopExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3ddeeL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/3711906423253552749");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FunDef", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8c1L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786625");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionDefinitions() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "FunctionDefinitions", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x45da4fd5064877c7L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/5033423309891991495");
    b.aggregate("definition", 0x45da4fd5064877c8L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8c1L).optional(false).ordered(true).multiple(false).origin("5033423309891991496").done();
    b.alias("fundef");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGuard() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Guard", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d926L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786726");
    b.aggregate("condition", 0x5feee6d035b3dd41L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6912716259988856129").done();
    b.aggregate("expression", 0x5feee6d035b3dd55L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(true).ordered(true).multiple(false).origin("6912716259988856149").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIICMConid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "IICMConid", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f6fL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.IICMember", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f4eL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453231");
    b.aggregate("value", 0x3f5c5828a3892f70L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("4565621053812453232").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIICMOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "IICMOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f7fL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.IICMember", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f4eL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453247");
    b.aggregate("value", 0x1cff861b633abe1dL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633abcd8L).optional(false).ordered(true).multiple(false).origin("2089536204310232605").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIICMVarid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "IICMVarid", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f5fL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.IICMember", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f4eL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453215");
    b.aggregate("value", 0x3f5c5828a3892f60L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e2L).optional(false).ordered(true).multiple(false).origin("4565621053812453216").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIICMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "IICMember", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f4eL);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453198");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIfThenElse() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "IfThenElse", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d994L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.TopExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3ddeeL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786836");
    b.aggregate("condition", 0x5feee6d035b3f813L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6912716259988862995").done();
    b.aggregate("then", 0x5feee6d035b3f815L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6912716259988862997").done();
    b.aggregate("else", 0x5feee6d035b3f818L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6912716259988863000").done();
    b.alias("if");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImport() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Import", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d877L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786551");
    b.aggregate("resource", 0x3f5c5828a388ab3bL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x23a7d272f9a8b3fdL).optional(false).ordered(true).multiple(false).origin("4565621053812419387").done();
    b.aggregate("as", 0x76d2ad9a0d6513caL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a388ab3eL).optional(true).ordered(true).multiple(false).origin("8562096718746031050").done();
    b.aggregate("list", 0x3f5c5828a388ab5cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a389112dL).optional(true).ordered(true).multiple(false).origin("4565621053812419420").done();
    b.alias("import");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportAs() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportAs", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a388ab3eL);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812419390");
    b.aggregate("value", 0x3f5c5828a388ab3fL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("4565621053812419391").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportHiding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportHiding", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a389113fL);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812445503");
    b.alias("hiding");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportItem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportItem", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892c26L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812452390");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportItemClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportItemClass", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f0bL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.ImportItem", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892c26L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453131");
    b.aggregate("class", 0x3f5c5828a3892f0cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("4565621053812453132").done();
    b.aggregate("members", 0x3f5c5828a3892f0eL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f4eL).optional(true).ordered(true).multiple(true).origin("4565621053812453134").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportItemOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportItemOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892f40L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.ImportItem", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892c26L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453184");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportItemQconid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportItemQconid", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892eebL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.ImportItem", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892c26L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453099");
    b.aggregate("value", 0x3f5c5828a3892eecL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985a6L).optional(false).ordered(true).multiple(false).origin("4565621053812453100").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportItemQvarid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportItemQvarid", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892efbL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.ImportItem", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892c26L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453115");
    b.aggregate("value", 0x3f5c5828a3892efcL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049a298fL).optional(false).ordered(true).multiple(false).origin("4565621053812453116").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportList", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a389112dL);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812445485");
    b.aggregate("hiding", 0x3f5c5828a389114dL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a389113fL).optional(true).ordered(true).multiple(false).origin("4565621053812445517").done();
    b.aggregate("items", 0x3f5c5828a3892c23L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3892c26L).optional(true).ordered(true).multiple(true).origin("4565621053812452387").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportedResource() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ImportedResource", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x23a7d272f9a8b3fdL);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/2569253503694844925");
    b.associate("resource", 0x23a7d272f9a8b3feL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d82fL).optional(false).origin("2569253503694844926").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfix() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Infix", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b32de1L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.InfixAbstract", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b32dcdL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988811233");
    b.alias("infix");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixAbstract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "InfixAbstract", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b32dcdL);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988811213");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Infixl", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b32de0L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.InfixAbstract", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b32dcdL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988811232");
    b.alias("infixl");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Infixr", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b32dccL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.InfixAbstract", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b32dcdL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988811212");
    b.alias("infixr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Instance", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d906L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786694");
    b.aggregate("name", 0x2854fa195e09dca7L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985a6L).optional(false).ordered(true).multiple(false).origin("2906222646419643559").done();
    b.aggregate("type", 0x2854fa195e09dcaaL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L).optional(false).ordered(true).multiple(false).origin("2906222646419643562").done();
    b.aggregate("context", 0x2854fa195e09d9e1L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1b099fc7c901af79L).optional(true).ordered(true).multiple(false).origin("2906222646419642849").done();
    b.aggregate("whereParts", 0x2854fa195e09dcaeL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede0L).optional(false).ordered(true).multiple(false).origin("2906222646419643566").done();
    b.alias("instance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntegerValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "IntegerValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d90aL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Literal", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f322057L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786698");
    b.prop("value", 0x6b074f517ae200a7L, "7712220098267840679");
    b.alias("integer");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLCQArrowAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LCQArrowAssignment", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fde27L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.LCQualifier", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fddd5L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6531617606750690855");
    b.aggregate("pattern", 0x5aa4f79b7b0fde28L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(false).origin("6531617606750690856").done();
    b.aggregate("expression", 0x5aa4f79b7b0fde2aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6531617606750690858").done();
    b.alias("<-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLCQGuard() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LCQGuard", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fde51L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.LCQualifier", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fddd5L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6531617606750690897");
    b.aggregate("condition", 0x5aa4f79b7b0fde52L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6531617606750690898").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLCQLet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LCQLet", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fdddfL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.LCQualifier", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fddd5L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6531617606750690783");
    b.aggregate("letDef", 0x5aa4f79b7b0fddf7L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede2L).optional(false).ordered(true).multiple(false).origin("6531617606750690807").done();
    b.alias("let");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLCQualifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LCQualifier", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fddd5L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6531617606750690773");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLDAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LDAnnotation", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a33d3L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.LetDefinition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede2L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/7420331049347593171");
    b.aggregate("representingNode", 0x66fa4fc6582a33d4L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8c0L).optional(false).ordered(true).multiple(false).origin("7420331049347593172").done();
    b.alias("::");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLDFunDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LDFunDef", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede1L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.LetDefinition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede2L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/7420331049347575265");
    b.aggregate("representingNode", 0x66fa4fc65829ede5L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8c1L).optional(false).ordered(true).multiple(false).origin("7420331049347575269").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLPExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LPExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3575c62ea7ed3709L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.LambdaPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3575c62ea7ed3708L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/3852202959973463817");
    b.aggregate("expression", 0x3575c62ea7ed370aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("3852202959973463818").done();
    b.alias("->");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLPLambda() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LPLambda", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3575c62ea7ed3719L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.LambdaPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3575c62ea7ed3708L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/3852202959973463833");
    b.aggregate("lambda", 0x3575c62ea7ed371aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d907L).optional(false).ordered(true).multiple(false).origin("3852202959973463834").done();
    b.alias("\\");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLambda() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Lambda", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d907L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.TopExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3ddeeL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786695");
    b.aggregate("argument", 0x5aa4f79b7b0fde9eL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(false).origin("6531617606750690974").done();
    b.aggregate("body", 0x5feee6d035b3fa3cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3575c62ea7ed3708L).optional(false).ordered(true).multiple(false).origin("6912716259988863548").done();
    b.alias("\\");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLambdaPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LambdaPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3575c62ea7ed3708L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/3852202959973463816");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Let", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d995L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.TopExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3ddeeL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786837");
    b.aggregate("letDefs", 0x5feee6d035b3f8fcL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede0L).optional(false).ordered(true).multiple(false).origin("6912716259988863228").done();
    b.aggregate("in", 0x5feee6d035b3f8feL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6912716259988863230").done();
    b.alias("let");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLetDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LetDefinition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede2L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/7420331049347575266");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLetDefinitions() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LetDefinitions", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede0L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/7420331049347575264");
    b.aggregate("letDefs", 0x66fa4fc65829ede3L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede2L).optional(false).ordered(true).multiple(true).origin("7420331049347575267").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLineComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "LineComment", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d655de7L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Comment", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d655de6L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746050023");
    b.prop("text", 0x76d2ad9a0d655e09L, "8562096718746050057");
    b.alias("--");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "List", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d902L);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.Term", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8edL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786690");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListComprehension() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ListComprehension", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fdd64L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.List", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d902L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6531617606750690660");
    b.aggregate("expression", 0x5aa4f79b7b0fdd9bL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("6531617606750690715").done();
    b.aggregate("qualifiers", 0x5aa4f79b7b0fdd9dL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fddd5L).optional(false).ordered(true).multiple(true).origin("6531617606750690717").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListEnumeration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ListEnumeration", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fdd02L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.List", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d902L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6531617606750690562");
    b.aggregate("items", 0x5aa4f79b7b0fdd05L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(true).ordered(true).multiple(true).origin("6531617606750690565").done();
    b.alias("[");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListRange() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ListRange", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5aa4f79b7b0fdd34L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.List", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d902L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6531617606750690612");
    b.aggregate("items", 0x5aa4f79b7b0fdd35L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(true).origin("6531617606750690613").done();
    b.aggregate("upTo", 0x5aa4f79b7b0fdd37L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(true).ordered(true).multiple(false).origin("6531617606750690615").done();
    b.alias("..");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Literal", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f322057L);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.Term", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8edL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/1839659371721793623");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMPModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "MPModule", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38868c6L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.ModulePart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38868c5L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812402374");
    b.associate("module", 0x23a7d272f99de928L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x23a7d272f9a8b3fdL).optional(false).origin("2569253503694137640").done();
    b.alias("module");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMPSCONID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "MPSCONID", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633b5a47L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.MPSimple", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a388ab0eL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/2089536204310272583");
    b.aggregate("value", 0x1cff861b633b5a48L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("2089536204310272584").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMPSVARID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "MPSVARID", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633b5a57L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.MPSimple", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a388ab0eL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/2089536204310272599");
    b.aggregate("value", 0x1cff861b633b5a58L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e2L).optional(false).ordered(true).multiple(false).origin("2089536204310272600").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMPSimple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "MPSimple", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a388ab0eL);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.ModulePart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38868c5L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812419342");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Main", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8a6L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786598");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Module", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d830L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786480");
    b.aggregate("parts", 0x76d2ad9a0d638f23L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38868c5L).optional(true).ordered(true).multiple(true).origin("8562096718745931555").done();
    b.alias("module");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModulePart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "ModulePart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38868c5L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812402373");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeCONID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "NodeCONID", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8800381220712711649");
    b.prop("value", 0x7a213c18049985e3L, "8800381220712711651");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "NodeOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633abcd8L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/2089536204310232280");
    b.prop("value", 0x5b03d9040f58aa31L, "6558324093842139697");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeVARID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "NodeVARID", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e2L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8800381220712711650");
    b.prop("value", 0x7a213c18049985f2L, "8800381220712711666");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPBracket() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PBracket", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x75a03de5fd2a22cdL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PatternArgument", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8475842556715475661");
    b.aggregate("argument", 0x75a03de5fd2a22f9L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(false).origin("8475842556715475705").done();
    b.alias("(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPConstructor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PConstructor", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951f8L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PatternArgument", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462072");
    b.aggregate("name", 0x3f5c5828a3895219L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("4565621053812462105").done();
    b.aggregate("arguments", 0x3f5c5828a389521bL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(true).ordered(true).multiple(true).origin("4565621053812462107").done();
    b.alias("constructor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPLEBPatternArgument() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PLEBPatternArgument", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x73138b1e057e2d74L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PLEBPlaceholder", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x73138b1e057e2d73L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8292124299976650100");
    b.aggregate("arg", 0x73138b1e057e2d77L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(false).origin("8292124299976650103").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPLEBPlaceholder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PLEBPlaceholder", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x73138b1e057e2d73L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8292124299976650099");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PList", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951f7L);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.PatternArgument", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462071");
    b.alias("list");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPListBracket() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PListBracket", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38952abL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PList", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951f7L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462251");
    b.aggregate("items", 0x3f5c5828a38952acL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x73138b1e057e2d73L).optional(false).ordered(true).multiple(true).origin("4565621053812462252").done();
    b.alias("[");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPListColon() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PListColon", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895253L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PList", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951f7L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462163");
    b.aggregate("heads", 0x3f5c5828a3895254L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(true).origin("4565621053812462164").done();
    b.aggregate("tail", 0x3f5c5828a3895256L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951f7L).optional(false).ordered(true).multiple(false).origin("4565621053812462166").done();
    b.alias(":");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPListVar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PListVar", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a389529bL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PList", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951f7L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462235");
    b.aggregate("variable", 0x3f5c5828a389529cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951faL).optional(false).ordered(true).multiple(false).origin("4565621053812462236").done();
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PLiteral", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951f9L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PatternArgument", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462073");
    b.aggregate("value", 0x1987c8739f0ea058L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f322057L).optional(false).ordered(true).multiple(false).origin("1839659371719467096").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPTuple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PTuple", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951f6L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PatternArgument", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462070");
    b.aggregate("items", 0x3f5c5828a38952d6L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(true).origin("4565621053812462294").done();
    b.alias("tuple");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPVarName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PVarName", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895209L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PVariable", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951faL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462089");
    b.aggregate("name", 0x3f5c5828a389520aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e2L).optional(false).ordered(true).multiple(false).origin("4565621053812462090").done();
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPVarWildcard() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PVarWildcard", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951fbL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.PVariable", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951faL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462075");
    b.alias("_");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PVariable", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951faL);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.PatternArgument", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462074");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPattern() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Pattern", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895192L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812461970");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatternArgument() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PatternArgument", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.Pattern", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895192L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812461971");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatternArgumentWrapper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PatternArgumentWrapper", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x501541569adb71daL);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/5770590337766224346");
    b.aggregate("pattern", 0x501541569adb71dbL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(true).ordered(true).multiple(false).origin("5770590337766224347").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatternFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PatternFunction", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895194L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Pattern", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895192L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812461972");
    b.aggregate("name", 0x3f5c5828a3895195L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e2L).optional(false).ordered(true).multiple(false).origin("4565621053812461973").done();
    b.aggregate("arguments", 0x3f5c5828a3895197L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(true).ordered(true).multiple(true).origin("4565621053812461975").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatternOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PatternOperator", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951c8L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Pattern", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895192L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812462024");
    b.aggregate("argumentLeft", 0x3f5c5828a38951cbL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(false).origin("4565621053812462027").done();
    b.aggregate("argumentRight", 0x3f5c5828a38951ceL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895193L).optional(false).ordered(true).multiple(false).origin("4565621053812462030").done();
    b.aggregate("operator", 0x3f5c5828a38951c9L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633abcd8L).optional(false).ordered(true).multiple(false).origin("4565621053812462025").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatternWrapper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "PatternWrapper", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1db1c5d8465bf8faL);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/2139708830661736698");
    b.aggregate("pattern", 0x1db1c5d8465bf8fbL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895192L).optional(false).ordered(true).multiple(false).origin("2139708830661736699").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQCONID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "QCONID", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985a6L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Term", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8edL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8800381220712711590");
    b.aggregate("qualifier1", 0x7a213c1804998601L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(true).ordered(true).multiple(false).origin("8800381220712711681").done();
    b.aggregate("qualifier2", 0x7a213c1804998603L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(true).ordered(true).multiple(false).origin("8800381220712711683").done();
    b.aggregate("conid", 0x7a213c1804998606L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("8800381220712711686").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQVARID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "QVARID", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049a298fL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Term", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8edL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8800381220712753551");
    b.aggregate("qualifier1", 0x7a213c18049a2990L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(true).ordered(true).multiple(false).origin("8800381220712753552").done();
    b.aggregate("qualifier2", 0x7a213c18049a2992L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(true).ordered(true).multiple(false).origin("8800381220712753554").done();
    b.aggregate("varid", 0x7a213c18049a2995L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e2L).optional(false).ordered(true).multiple(false).origin("8800381220712753557").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResource() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Resource", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1cff861b633ae12dL);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/2089536204310241581");
    b.prop("value", 0x4ee95c706b9e59aaL, "5686177642443594154");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpletype() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Simpletype", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L);
    b.class_(false, true, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746085873");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSkeleton() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Skeleton", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d82fL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786479");
    b.aggregate("module", 0x7fa876a53c3d865L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d830L).optional(false).ordered(true).multiple(false).origin("574920793184786533").done();
    b.aggregate("imports", 0x7fa876a53c3d89cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d877L).optional(true).ordered(true).multiple(true).origin("574920793184786588").done();
    b.aggregate("definitions", 0x7fa876a53c3d8a2L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL).optional(true).ordered(true).multiple(true).origin("574920793184786594").done();
    b.aggregate("main", 0x7fa876a53c3d8a7L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8a6L).optional(false).ordered(true).multiple(false).origin("574920793184786599").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "StringValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d909L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Literal", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f322057L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786697");
    b.prop("value", 0x6b074f517ae200b6L, "7712220098267840694");
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTerm() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Term", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8edL);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.TopExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3ddeeL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786669");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTopExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "TopExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x5feee6d035b3ddeeL);
    b.class_(false, true, false);
    b.super_("BaseFrege.structure.ExpressionPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a350aL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/6912716259988856302");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrueValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "TrueValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x1987c8739f20387eL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.BooleanValue", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d90cL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/1839659371720620158");
    b.alias("true");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTuple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Tuple", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d903L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Term", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8edL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786691");
    b.aggregate("first", 0x7a213c18049a54f0L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(false).origin("8800381220712764656").done();
    b.aggregate("rest", 0x76d2ad9a0d655eacL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8d7L).optional(false).ordered(true).multiple(true).origin("8562096718746050220").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Type", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x2854fa195e0a238bL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Definition", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d89fL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/2906222646419661707");
    b.aggregate("name", 0x2854fa195e0a238cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e1L).optional(false).ordered(true).multiple(false).origin("2906222646419661708").done();
    b.aggregate("typeVariables", 0x2854fa195e0a238eL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f4L).optional(true).ordered(true).multiple(true).origin("2906222646419661710").done();
    b.aggregate("equalTo", 0x2854fa195e0a2391L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3893019L).optional(false).ordered(true).multiple(false).origin("2906222646419661713").done();
    b.alias("type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeBrackets() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "TypeBrackets", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a389309dL);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Simpletype", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/4565621053812453533");
    b.aggregate("bracketedType", 0x3f5c5828a389309eL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65ea2dL).optional(false).ordered(true).multiple(false).origin("4565621053812453534").done();
    b.alias("(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "TypeData", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65ea05L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Simpletype", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746085893");
    b.aggregate("dataType", 0x98f4661fd2f2c1dL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985a6L).optional(false).ordered(true).multiple(false).origin("688846654684474397").done();
    b.aggregate("simpletypes", 0x76d2ad9a0d65ea06L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L).optional(true).ordered(true).multiple(true).origin("8562096718746085894").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "TypeFunction", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65ea2dL);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746085933");
    b.aggregate("arguments", 0x76d2ad9a0d65ea2eL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L).optional(true).ordered(true).multiple(true).origin("8562096718746085934").done();
    b.aggregate("returnType", 0x76d2ad9a0d65ea30L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L).optional(false).ordered(true).multiple(false).origin("8562096718746085936").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "TypeList", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d662e92L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Simpletype", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746103442");
    b.aggregate("itemsType", 0x76d2ad9a0d662e93L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65ea2dL).optional(false).ordered(true).multiple(false).origin("8562096718746103443").done();
    b.alias("[");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeTuple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "TypeTuple", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d662e79L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Simpletype", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746103417");
    b.aggregate("first", 0x3f5c5828a3893058L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65ea2dL).optional(false).ordered(true).multiple(false).origin("4565621053812453464").done();
    b.aggregate("rest", 0x76d2ad9a0d662e7aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65ea2dL).optional(false).ordered(true).multiple(true).origin("8562096718746103418").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "TypeVariable", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f4L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Simpletype", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x76d2ad9a0d65e9f1L);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8562096718746085876");
    b.aggregate("value", 0x3f5c5828a389301aL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c18049985e2L).optional(false).ordered(true).multiple(false).origin("4565621053812453402").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnaryOPExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "UnaryOPExpression", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a3525L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.ExpressionPart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a350aL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/7420331049347593509");
    b.aggregate("expression", 0x66fa4fc6582a3526L).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc6582a350aL).optional(false).ordered(true).multiple(false).origin("7420331049347593510").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnderscore() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "Underscore", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7a213c1804993fa7L);
    b.class_(false, false, false);
    b.super_("BaseFrege.structure.Term", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d8edL);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/8800381220712693671");
    b.alias("_");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWherePart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseFrege", "WherePart", 0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d993L);
    b.class_(false, false, false);
    b.origin("r:510a4f4e-9bcb-4fe8-a8a3-6e4488a35835(BaseFrege.structure)/574920793184786835");
    b.aggregate("letDefs", 0x5aa4f79b7b10640cL).target(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x66fa4fc65829ede0L).optional(false).ordered(true).multiple(false).origin("6531617606750725132").done();
    return b.create();
  }
}
