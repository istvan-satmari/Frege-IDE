package BaseFrege.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.editor.runtime.selection.SelectionUtil;
import jetbrains.mps.openapi.editor.selection.SelectionManager;

public class Tuple_RemoveRestItems {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new Tuple_RemoveRestItems.Tuple_RemoveRestItems_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new Tuple_RemoveRestItems.Tuple_RemoveRestItems_BACKSPACE(node));
  }
  public static class Tuple_RemoveRestItems_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public Tuple_RemoveRestItems_DELETE(SNode node) {
      this.myNode = node;
    }
    public String getDescriptionText() {
      return "Falls back to bracketed expression.";
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode brackets = SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x4b2fbc03f0235dafL, "BaseFrege.structure.BracketsApplication")), null);
      SLinkOperations.setTarget(brackets, MetaAdapterFactory.getContainmentLink(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x4b2fbc03f0235dafL, 0x4b2fbc03f0235db0L, "expression"), SNodeOperations.copyNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d903L, 0x7a213c18049a54f0L, "first"))));
      SNodeOperations.replaceWithAnother(node, brackets);

      SelectionUtil.selectCell(editorContext, brackets, SelectionManager.FIRST_ERROR_CELL + "|" + SelectionManager.FOCUS_POLICY_CELL + "|" + SelectionManager.FIRST_EDITABLE_CELL + "|" + SelectionManager.FIRST_CELL);
    }
  }
  public static class Tuple_RemoveRestItems_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public Tuple_RemoveRestItems_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public String getDescriptionText() {
      return "Falls back to bracketed expression.";
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode brackets = SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x4b2fbc03f0235dafL, "BaseFrege.structure.BracketsApplication")), null);
      SLinkOperations.setTarget(brackets, MetaAdapterFactory.getContainmentLink(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x4b2fbc03f0235dafL, 0x4b2fbc03f0235db0L, "expression"), SNodeOperations.copyNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x7fa876a53c3d903L, 0x7a213c18049a54f0L, "first"))));
      SNodeOperations.replaceWithAnother(node, brackets);

      SelectionUtil.selectCell(editorContext, brackets, SelectionManager.FIRST_ERROR_CELL + "|" + SelectionManager.FOCUS_POLICY_CELL + "|" + SelectionManager.FIRST_EDITABLE_CELL + "|" + SelectionManager.FIRST_CELL);
    }
  }
}
