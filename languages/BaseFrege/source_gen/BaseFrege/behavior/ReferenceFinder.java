package BaseFrege.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.scope.Scope;

public abstract class ReferenceFinder {
  protected abstract String getName(SNode child);

  public SNode findBestMatch(Iterable<SNode> availableNodes, String pattern) {
    SNode bestMatch = null;
    int bestMatchSize = Integer.MAX_VALUE;

    for (SNode singleNode : Sequence.fromIterable(availableNodes)) {
      String nodeValue = this.getName(singleNode);
      int operatorLength = nodeValue.length();

      if (nodeValue.startsWith(pattern) && operatorLength < bestMatchSize) {
        bestMatch = singleNode;
        bestMatchSize = operatorLength;
      }
    }

    return bestMatch;
  }

  public SNode findBestMatch(Scope scope, String pattern) {
    return this.findBestMatch(scope.getAvailableElements(pattern), pattern);
  }
}
