package BaseFrege.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class FunctionDefinitionUtilities {
  public static boolean ssnCanReturnPVarName(SNode currentNode, String restriction) {
    // Returns whether it is possible for nodes like PTuple, PBracket, ..., to return PVarName scope 
    boolean containedWithinSSN = (SNodeOperations.getNodeAncestor(currentNode, MetaAdapterFactory.getConcept(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a3895194L, "BaseFrege.structure.PatternFunction"), false, false) != null) || (SNodeOperations.getNodeAncestor(currentNode, MetaAdapterFactory.getConcept(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x155bf5aa2841626bL, "BaseFrege.structure.PatternFunctionInGroup"), false, false) != null) || (SNodeOperations.getNodeAncestor(currentNode, MetaAdapterFactory.getConcept(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x3f5c5828a38951c8L, "BaseFrege.structure.PatternOperator"), false, false) != null) || (SNodeOperations.getNodeAncestor(currentNode, MetaAdapterFactory.getConcept(0x90eaf9a4a968473cL, 0x8aedfef10c04a5dfL, 0x4dbb8871591a2c8aL, "BaseFrege.structure.PatternOperatorInGroup"), false, false) != null);

    return (restriction == "variables") == containedWithinSSN;
  }
}
